抽象工厂

如果要加一个菜，那么抽象工厂就要加一个，然后每个工厂都得实现一下。
如果要加一个工厂（这里是茶餐厅），那么只需要实现一个新的工厂就可以了。

优点：降低了使用者和业务类的耦合，改由工厂负责创建。在这个例子里，
假如某天这家茶餐厅的奶茶不做热的了，只做冷的，那么只需要修改茶餐厅（工厂），
吃客（使用者）不需要关心具体（反正只要是奶茶即可）。另外换一个茶餐厅也容易。

缺点：抽象类约束了工厂，在这里就是要求茶餐厅都必须有这些食品。一旦业务变动，
例如不是所有茶餐厅都卖猪扒包或者要求所有茶餐厅都要有某一个菜时，所有工厂都得
跟着变动。